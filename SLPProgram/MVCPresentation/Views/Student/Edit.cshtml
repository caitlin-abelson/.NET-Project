@model DataObjects.Students

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Students</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <input type="hidden" name="StudentId" value="@Model.StudentId" />
    <input type="hidden" name="SchoolName" value="@Model.SchoolName" />
    <input type="hidden" name="NCESId" value="@Model.NCESId" />
    <input type="hidden" name="Birthday" value="@Model.Birthday" />
    <input type="hidden" name="Grade" value="@Model.Grade" />
    <input type="hidden" name="FirstName" value="@Model.FirstName" />
    <input type="hidden" name="LastName" value="@Model.LastName" />
    <input type="hidden" name="Address" value="@Model.Address" />
    <input type="hidden" name="City" value="@Model.City" />
    <input type="hidden" name="State" value="@Model.State" />
    <input type="hidden" name="ZipCode" value="@Model.ZipCode" />

    <div class="form-group">
        @Html.LabelFor(model => model.IEPType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IEPType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IEPType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IEPdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IEPdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IEPdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IEPLeaderFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IEPLeaderFirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IEPLeaderFirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IEPLeaderLastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IEPLeaderLastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IEPLeaderLastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IEPNotes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IEPNotes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IEPNotes, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.GoalType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GoalType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GoalType, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
